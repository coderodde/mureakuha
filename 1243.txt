import java.util.Arrays;
import java.util.Random;

public class Main { 
    
    public static void Cyclesort(int[] array) {
        for (int i = 0; i < array.length; i++) {
            int j = array[i];
            
            if (i != j) {
                int save = array[i];
                
                do {
                    int temp = array[j];
                    array[j] = save; 
                    save = temp;
                    j = save;
                } while (i != j);
                
                array[i] = save;
            }
        }
    }
    
    public static void main(String[] args) {
        int[] arr1 = getRandomArray(8, 212L);
        System.out.print("Before Cyclesort(): ");
        printArray(arr1);
        Cyclesort(arr1);
        System.out.print("After Cyclesort():  ");
        printArray(arr1);
        
        System.out.println();
        
        final int N = 1000000;
        
        System.out.println("Sorting " + N + " elements.");
        
        arr1 = getRandomArray(N, 313L);
        
        long ta = System.currentTimeMillis();
        Cyclesort(arr1);
        long tb = System.currentTimeMillis();
        
        System.out.println("Cyclesort(): " + (tb - ta) + " ms.");
        System.out.println("Sorted: " + isSorted(arr1));
        
        arr1 = getRandomArray(N, 313L);
        
        ta = System.currentTimeMillis();
        Arrays.sort(arr1);
        tb = System.currentTimeMillis();
        
        System.out.println("Arrays.sort(): " + (tb - ta) + " ms.");
    }
    
    static void printArray(int[] array) {
        if (array.length > 20)
            return;
        
        for (int i : array)
            System.out.print(i + " ");
        
        System.out.println();
    }
    
    static boolean isSorted(int[] array) {
        for (int i = 0; i < array.length - 1; i++)
            if (array[i] > array[i + 1])
                return false;
        
        return true;
    }
    
    static int[] getRandomArray(int size, long seed) {
        int[] array = new int[size];
        Random r = new Random(seed);
        
        for (int i = 0; i < size; i++)
            array[i] = i;
        
        for (int i = 0; i < size / 2; i++) {
            int j = r.nextInt(size);
            int k = r.nextInt(size);
            int tmp = array[j];
            array[j] = array[k];
            array[k] = tmp;
        }
        
        return array;
    }
}
